diff -pruN quakeforge-0.5.5-orig/debian/control quakeforge-0.5.5-patched/debian/control
--- quakeforge-0.5.5-orig/debian/control	2010-06-30 15:38:21.000000000 -0700
+++ quakeforge-0.5.5-patched/debian/control	2010-07-09 17:14:30.000000000 -0700
@@ -53,7 +53,7 @@ Description: QuakeForge 3D game engine -
  utilities and applications for QuakeForge.
 
 Package: quakeforge-sdl
-Architecture: i386
+Architecture: any
 Conflicts: quake-sdl
 Depends: quake-game, ${shlibs:Depends}
 Provides: quakeforge-client
diff -pruN quakeforge-0.5.5-orig/debian/quakeforge-common.conffiles quakeforge-0.5.5-patched/debian/quakeforge-common.conffiles
--- quakeforge-0.5.5-orig/debian/quakeforge-common.conffiles	1969-12-31 16:00:00.000000000 -0800
+++ quakeforge-0.5.5-patched/debian/quakeforge-common.conffiles	2010-07-09 17:10:06.000000000 -0700
@@ -0,0 +1 @@
+/etc/quakeforge.conf
diff -pruN quakeforge-0.5.5-orig/debian/quakeforge.substvars quakeforge-0.5.5-patched/debian/quakeforge.substvars
--- quakeforge-0.5.5-orig/debian/quakeforge.substvars	1969-12-31 16:00:00.000000000 -0800
+++ quakeforge-0.5.5-patched/debian/quakeforge.substvars	2010-07-09 17:10:50.000000000 -0700
@@ -0,0 +1 @@
+misc:Depends=
diff -pruN quakeforge-0.5.5-orig/include/context_x11.h quakeforge-0.5.5-patched/include/context_x11.h
--- quakeforge-0.5.5-orig/include/context_x11.h	2004-03-20 21:39:59.000000000 -0800
+++ quakeforge-0.5.5-patched/include/context_x11.h	2010-07-09 16:57:09.000000000 -0700
@@ -56,7 +56,7 @@ extern int		x_screen;
 extern int		x_shmeventtype;
 extern Time		x_time;
 extern Time		x_mouse_time;
-extern qboolean doShm;
+//extern qboolean doShm;
 extern qboolean oktodraw;
 extern qboolean x_have_focus;
 
diff -pruN quakeforge-0.5.5-orig/include/QF/console.h quakeforge-0.5.5-patched/include/QF/console.h
--- quakeforge-0.5.5-orig/include/QF/console.h	2003-07-25 15:21:42.000000000 -0700
+++ quakeforge-0.5.5-patched/include/QF/console.h	2010-07-09 15:39:22.000000000 -0700
@@ -141,6 +141,6 @@ void Menu_KeyEvent (knum_t key, short un
 void Menu_Enter (void);
 void Menu_Leave (void);
 
-extern struct cvar_s *con_size;
+//extern struct cvar_s *con_size;
 
 #endif // __console_h
diff -pruN quakeforge-0.5.5-orig/include/QF/sound.h quakeforge-0.5.5-patched/include/QF/sound.h
--- quakeforge-0.5.5-orig/include/QF/sound.h	2010-06-30 17:33:33.000000000 -0700
+++ quakeforge-0.5.5-patched/include/QF/sound.h	2010-07-09 11:49:28.000000000 -0700
@@ -112,29 +112,29 @@ struct channel_s *S_AllocChannel (void);
 // number of times S_Update() is called per second.
 //
 
-extern qboolean 		fakedma;
+//extern qboolean 		fakedma;
 extern int 			fakedma_updates;
 extern unsigned paintedtime;
-extern unsigned soundtime;
-extern vec3_t listener_origin;
-extern vec3_t listener_forward;
-extern vec3_t listener_right;
-extern vec3_t listener_up;
-extern vec_t sound_nominal_clip_dist;
+//extern unsigned soundtime;
+//extern vec3_t listener_origin;
+//extern vec3_t listener_forward;
+//extern vec3_t listener_right;
+//extern vec3_t listener_up;
+//extern vec_t sound_nominal_clip_dist;
 
 extern	struct cvar_s *snd_loadas8bit;
 //extern	struct cvar_s *bgmvolume;
 extern	struct cvar_s *volume;
 
-extern	struct cvar_s *snd_mixahead;
-extern	struct cvar_s	*snd_device;
-extern	struct cvar_s	*snd_rate;
-extern	struct cvar_s	*snd_bits;
+//extern	struct cvar_s *snd_mixahead;
+//extern	struct cvar_s	*snd_device;
+//extern	struct cvar_s	*snd_rate;
+//extern	struct cvar_s	*snd_bits;
 //extern	struct cvar_s	*snd_stereo;
 extern	struct cvar_s	*snd_interp;
 extern	struct cvar_s *snd_stereo_phase_separation;
 
-extern qboolean	snd_initialized;
+//extern qboolean	snd_initialized;
 
 //extern int		snd_blocked;
 
diff -pruN quakeforge-0.5.5-orig/libs/console/server.c quakeforge-0.5.5-patched/libs/console/server.c
--- quakeforge-0.5.5-orig/libs/console/server.c	2004-01-26 21:23:36.000000000 -0800
+++ quakeforge-0.5.5-patched/libs/console/server.c	2010-07-09 15:41:38.000000000 -0700
@@ -70,7 +70,7 @@ static __attribute__ ((unused)) const ch
 
 #include "compat.h"
 
-static console_data_t con_data;
+//static console_data_t con_data;
 
 static QFile  *log_file;
 static cvar_t *sv_logfile;
diff -pruN quakeforge-0.5.5-orig/libs/gib/gib_classes.c quakeforge-0.5.5-patched/libs/gib/gib_classes.c
--- quakeforge-0.5.5-orig/libs/gib/gib_classes.c	2003-11-28 18:01:31.000000000 -0800
+++ quakeforge-0.5.5-patched/libs/gib/gib_classes.c	2010-07-09 16:49:38.000000000 -0700
@@ -184,16 +184,14 @@ Object_Class_New_f (gib_object_t *obj, g
 	return 0;
 }
 
-static int
-Object_Class_Children_f (gib_object_t *obj, gib_method_t *method, void *data,
-		gib_object_t *sender, gib_message_t mesg)
+static int Object_Class_Children_f 
+    (gib_object_t *obj, gib_method_t *method, void *data, gib_object_t *sender, gib_message_t mesg)
 {
 	const char **reply;
 	unsigned int size;
 	unsigned int i = 0;
 	
-	static qboolean
-	iterator (gib_class_t *class, void *unused)
+	qboolean iterator (gib_class_t *class, void *unused)
 	{
 		reply[i++] = class->name;
 		return false;
@@ -610,14 +608,12 @@ GIB_Classes_Build_Scripted (const char *
 	gib_classdesc_t desc;
 	enum {CLASS, INSTANCE} mode = INSTANCE;
 	
-	static void
-	mtabfree (void *mtab, void *unused)
+	void mtabfree (void *mtab, void *unused)
 	{
 		free (mtab);
 	}
 
-	static const char *
-	fname (const char *str)
+	const char * fname (const char *str)
 	{
 		if (mode == INSTANCE)
 			return va ("__%s_%s__", name, str);
diff -pruN quakeforge-0.5.5-orig/libs/gib/gib_function.c quakeforge-0.5.5-patched/libs/gib/gib_function.c
--- quakeforge-0.5.5-orig/libs/gib/gib_function.c	2004-04-09 11:18:19.000000000 -0700
+++ quakeforge-0.5.5-patched/libs/gib/gib_function.c	2010-07-09 16:50:12.000000000 -0700
@@ -169,8 +169,7 @@ GIB_Function_Prepare_Args (cbuf_t * cbuf
 	gib_var_t  *var;
 	static char argss[] = "args";
 
-	static qboolean 
-	iterate (char *arg, llist_node_t *node)
+	qboolean iterate (char *arg, llist_node_t *node)
 	{	
 		var = GIB_Var_Get_Complex (&GIB_DATA(cbuf)->locals, &zero,
 			arg, &ind, true);
@@ -207,8 +206,7 @@ GIB_Function_Prepare_Args_D (cbuf_t * cb
 	gib_var_t  *var;
 	static char argss[] = "args";
 
-	static qboolean 
-	iterate (char *arg, llist_node_t *node)
+	qboolean iterate (char *arg, llist_node_t *node)
 	{	
 		var = GIB_Var_Get_Complex (&GIB_DATA(cbuf)->locals, &zero,
 			arg, &ind, true);
diff -pruN quakeforge-0.5.5-orig/libs/gib/gib_thread.c quakeforge-0.5.5-patched/libs/gib/gib_thread.c
--- quakeforge-0.5.5-orig/libs/gib/gib_thread.c	2003-09-10 23:03:10.000000000 -0700
+++ quakeforge-0.5.5-patched/libs/gib/gib_thread.c	2010-07-09 16:50:36.000000000 -0700
@@ -89,7 +89,7 @@ GIB_Thread_Count (void)
 void
 GIB_Thread_Execute (void)
 {
-	static qboolean iterator (cbuf_t *cbuf, llist_node_t *node)
+	qboolean iterator (cbuf_t *cbuf, llist_node_t *node)
 	{
 		if (GIB_DATA(cbuf)->program)
 			Cbuf_Execute_Stack (cbuf);
diff -pruN quakeforge-0.5.5-orig/qw/source/cl_chat.c quakeforge-0.5.5-patched/qw/source/cl_chat.c
--- quakeforge-0.5.5-orig/qw/source/cl_chat.c	2003-07-17 23:27:26.000000000 -0700
+++ quakeforge-0.5.5-patched/qw/source/cl_chat.c	2010-07-09 16:59:03.000000000 -0700
@@ -66,7 +66,7 @@ CL_Ignore_Compare (const void *ele, cons
 static void
 CL_Ignore_Sanity_Check (void)
 {
-	static qboolean iterator (ignore_t *ig, llist_node_t *node)
+	qboolean iterator (ignore_t *ig, llist_node_t *node)
 	{
 		if (cl.players[ig->slot].userid != ig->uid) // We got out of sync somehow
 			llist_remove (node);
@@ -80,12 +80,12 @@ CL_Ignore_f (void)
 {
 	CL_Ignore_Sanity_Check ();
 	if (Cmd_Argc () == 1) {
-		static qboolean live_iterator (ignore_t *ig, llist_node_t *node)
+		qboolean live_iterator (ignore_t *ig, llist_node_t *node)
 		{
 			Sys_Printf ("%5i - %s\n", ig->uid, Info_ValueForKey (cl.players[ig->slot].userinfo, "name"));
 			return true;
 		}
-		static qboolean dead_iterator (ignore_t *ig, llist_node_t *node)
+		qboolean dead_iterator (ignore_t *ig, llist_node_t *node)
 		{
 			Sys_Printf ("%s\n", ig->lastname);
 			return true;
@@ -145,7 +145,7 @@ CL_Chat_Allow_Message (const char *str)
 	dstring_t *test = dstring_newstr ();
 	qboolean allowed = true;
 
-	static qboolean iterator (ignore_t *ig, llist_node_t *node)
+	qboolean iterator (ignore_t *ig, llist_node_t *node)
 	{
 		if (cl.players[ig->slot].userid != ig->uid) { // We got out of sync somehow
 			llist_remove (node);
@@ -183,7 +183,7 @@ CL_Chat_Check_Name (const char *name, in
 {
 	ignore_t *found = 0;
 
-	static qboolean iterator (ignore_t *ig, llist_node_t *node)
+	qboolean iterator (ignore_t *ig, llist_node_t *node)
 	{
 		if (!strcmp (ig->lastname, name)) {
 			found = ig;
diff -pruN quakeforge-0.5.5-orig/tools/qfcc/include/method.h quakeforge-0.5.5-patched/tools/qfcc/include/method.h
--- quakeforge-0.5.5-orig/tools/qfcc/include/method.h	2004-02-03 20:49:46.000000000 -0800
+++ quakeforge-0.5.5-patched/tools/qfcc/include/method.h	2010-07-09 16:59:55.000000000 -0700
@@ -99,6 +99,6 @@ void clear_selectors (void);
 
 struct expr_s *method_check_params (method_t *method, struct expr_s *args);
 
-extern struct hashtab_s *known_methods;
+//extern struct hashtab_s *known_methods;
 
 #endif//__method_h
